<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>網際內容管理系統</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2024-06-20T11:00:00+08:00</updated><entry><title>wcm2024 期末專案</title><link href="./2024-wcm2024-w18-blog-tutorial.html" rel="alternate"></link><published>2024-06-20T11:00:00+08:00</published><updated>2024-06-20T02:22:21+08:00</updated><author><name>wei</name></author><id>tag:None,2024-06-20:./2024-wcm2024-w18-blog-tutorial.html</id><summary type="html">&lt;p&gt;貪吃蛇遊戲&lt;/p&gt;
</summary><content type="html">&lt;p&gt;貪吃蛇遊戲&lt;/p&gt;


&lt;h1&gt;操作步驟和影片展示&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://41223153.github.io/wcm2024/content/%E6%9C%9F%E6%9C%AB%E5%B0%88%E6%A1%88.html"&gt;https://41223153.github.io/wcm2024/content/%E6%9C%9F%E6%9C%AB%E5%B0%88%E6%A1%88.html&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;期末心得&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://41223153.github.io/wcm2024/content/%E5%BF%83%E5%BE%97.html"&gt;https://41223153.github.io/wcm2024/content/%E5%BF%83%E5%BE%97.html&lt;/a&gt;&lt;/p&gt;</content><category term="w18"></category><category term="網誌編寫"></category></entry><entry><title>wcm2024 課程W14</title><link href="./2024-wcm2024-w14-blog-tutorial.html" rel="alternate"></link><published>2024-05-23T11:00:00+08:00</published><updated>2024-06-19T05:45:10+08:00</updated><author><name>wei</name></author><id>tag:None,2024-05-23:./2024-wcm2024-w14-blog-tutorial.html</id><summary type="html">&lt;p&gt;啟動並執行網際猜數字遊戲&lt;/p&gt;
</summary><content type="html">&lt;p&gt;啟動並執行網際猜數字遊戲&lt;/p&gt;


&lt;h1&gt;網際猜數字遊戲&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://youtu.be/nVAZJh5PzEM"&gt;https://youtu.be/nVAZJh5PzEM&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;可攜程式系統的批次檔案說明&lt;/h1&gt;
&lt;p&gt;以下影片說明近端執行遊戲:
&lt;a href="https://youtu.be/fjheqtLYATg"&gt;https://youtu.be/fjheqtLYATg&lt;/a&gt;&lt;/p&gt;</content><category term="w14"></category><category term="網誌編寫"></category></entry><entry><title>wcm2024 課程W13</title><link href="./2024-wcm2024-w13-blog-tutorial.html" rel="alternate"></link><published>2024-05-16T11:00:00+08:00</published><updated>2024-06-19T05:38:04+08:00</updated><author><name>wei</name></author><id>tag:None,2024-05-16:./2024-wcm2024-w13-blog-tutorial.html</id><summary type="html">&lt;p&gt;線上猜數字遊戲&lt;/p&gt;
</summary><content type="html">&lt;p&gt;線上猜數字遊戲&lt;/p&gt;


&lt;h1&gt;Linux&lt;/h1&gt;
&lt;p&gt;在Linux設定全域 Proxy伺服器的位置，可以是 /etc/environment檔案中的:&lt;/p&gt;
&lt;p&gt;http_proxy="http://your_proxy_server:port" 
https_proxy="http://your_proxy_server:port"&lt;/p&gt;
&lt;p&gt;能不能讓每一位學員都擁有遠端登入stud.cycu.org這台主機的帳號?How?擁有帳號，然後呢?&lt;/p&gt;
&lt;h1&gt;猜數字遊戲&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://229.cycu.org:88/"&gt;http://229.cycu.org:88/&lt;/a&gt;&lt;/p&gt;</content><category term="w13"></category><category term="網誌編寫"></category></entry><entry><title>wcm2024 課程W11</title><link href="./2024-wcm2024-w11-blog-tutorial.html" rel="alternate"></link><published>2024-05-02T11:00:00+08:00</published><updated>2024-06-18T18:54:03+08:00</updated><author><name>wei</name></author><id>tag:None,2024-05-02:./2024-wcm2024-w11-blog-tutorial.html</id><summary type="html">&lt;p&gt;說明如何在網頁中加入Brython程式應用。 &lt;/p&gt;
</summary><content type="html">&lt;p&gt;說明如何在網頁中加入Brython程式應用。 &lt;/p&gt;


&lt;h1&gt;從教務主機直接擷取課表資料&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://41223153.github.io/wcm2024/content/W11.html"&gt;https://41223153.github.io/wcm2024/content/W11.html&lt;/a&gt;&lt;/p&gt;</content><category term="w11"></category><category term="網誌編寫"></category></entry><entry><title>wcm2024 分組專案W10</title><link href="./2024-wcm2024-w10-blog-tutorial.html" rel="alternate"></link><published>2024-04-18T11:00:00+08:00</published><updated>2024-06-18T18:53:19+08:00</updated><author><name>wei</name></author><id>tag:None,2024-04-18:./2024-wcm2024-w10-blog-tutorial.html</id><summary type="html">&lt;p&gt;網際內容管理課程分組專案 &lt;/p&gt;
</summary><content type="html">&lt;p&gt;網際內容管理課程分組專案 &lt;/p&gt;


&lt;h1&gt;分組專案&lt;/h1&gt;
&lt;p&gt;1a stud 倉儲:&lt;a href="https://github.com/mdewcm2024/1astud-site"&gt;https://github.com/mdewcm2024/1astud-site&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在專案的頁面，找到自己的組別，在組別分頁中打上截至目前為止對這堂課的心得，儲存後將心得推送至倉儲中。&lt;/p&gt;</content><category term="w10"></category><category term="網誌編寫"></category></entry><entry><title>wcm2024 課程期中整理</title><link href="./2024-wcm2024-w9-blog-tutorial.html" rel="alternate"></link><published>2024-04-14T11:00:00+08:00</published><updated>2024-06-18T18:53:19+08:00</updated><author><name>wei</name></author><id>tag:None,2024-04-14:./2024-wcm2024-w9-blog-tutorial.html</id><summary type="html">&lt;p&gt;網際內容管理課程的英文名稱為 Web-based Content Management, 課程目標是讓學員得以運用網頁來管理與個人或專業領域應用相關的內容. 當然, 我們還想啟發學員對於網頁與內容管理發展趨勢的思考, 並且針對學員選課, 評定出一個合理的修課成績!&lt;/p&gt;
</summary><content type="html">&lt;p&gt;網際內容管理課程的英文名稱為 Web-based Content Management, 課程目標是讓學員得以運用網頁來管理與個人或專業領域應用相關的內容. 當然, 我們還想啟發學員對於網頁與內容管理發展趨勢的思考, 並且針對學員選課, 評定出一個合理的修課成績!&lt;/p&gt;


&lt;h1&gt;期中成績自評&lt;/h1&gt;
&lt;p&gt;是否依照當周所討論的議題進行討論，或是將當周上的的重點或心得進行整理後上傳到自己的部落格中。
再依照完成的程度為自己評分，此評分將作為網際內容管理課程的其中成績。&lt;/p&gt;
&lt;h1&gt;AI工具&lt;/h1&gt;
&lt;p&gt;目前常用的AI程式為OpenAI所推出的ChatGPT，能幫助我處理在維護程式和推送更新時，所遇到的錯誤和瓶頸丟給它詢問解決的方案，在它的回答中尋找可用的資訊，來解決遇到的問題。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://chatgpt.com/"&gt;https://chatgpt.com/&lt;/a&gt;&lt;/p&gt;</content><category term="w9"></category><category term="網誌編寫"></category></entry><entry><title>wcm2024 課程W8</title><link href="./2024-wcm2024-w8-blog-tutorial.html" rel="alternate"></link><published>2024-04-11T11:00:00+08:00</published><updated>2024-06-18T18:53:19+08:00</updated><author><name>wei</name></author><id>tag:None,2024-04-11:./2024-wcm2024-w8-blog-tutorial.html</id><summary type="html">&lt;p&gt;從教育的本質看網際內容管理課程的內容要點。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;從教育的本質看網際內容管理課程的內容要點。&lt;/p&gt;


&lt;h1&gt;與Chat GPT對話結果&lt;/h1&gt;
&lt;p&gt;詢問ChatGPT，教育的本質為何?&lt;/p&gt;
&lt;p&gt;教育的本質是一個複雜而多維度的概念，涉及知識傳遞、能力培養、人格塑造和社會化過程。 它不僅是對知識和技能的傳授，更重要的是培養人的綜合素質，包括價值觀、道德觀、美學、思考能力和創新能力。 以下是教育本質的一些關鍵面向：&lt;/p&gt;
&lt;p&gt;知識傳遞:教育最基本的功能是傳遞現有的知識與文化，讓學生掌握科學、文學、歷史等各領域的基礎知識。 這是培養學生理解世界、解決問題的基礎。&lt;/p&gt;
&lt;p&gt;能力培養:教育不僅傳授知識，還要培養學生的各種能力，包括批判性思考、創造力、解決問題的能力、溝通技巧和團隊合作能力。 這些能力使學生能夠應對複雜多變的世界。&lt;/p&gt;
&lt;p&gt;人格塑造:教育過程中的品德教育與心理教育是不可或缺的。 教育應致力於培養學生的道德感、責任感、正直、同情心和社會責任感。&lt;/p&gt;
&lt;p&gt;社會化過程:教育幫助個體理解社會規範和文化價值觀，培養其社會適應能力和社會角色的認知。 透過教育，學生學會如何與他人合作、交流，並在社會中找到自己的位置。&lt;/p&gt;
&lt;p&gt;終身學習:現代教育強調終身學習的概念，培養學生自主學習的能力和習慣，使他們在未來的生活中能不斷更新知識和技能，並適應社會的變化。&lt;/p&gt;
&lt;p&gt;個性發展:教育應尊重每位學生的個性和天賦，鼓勵他們探索自己的興趣和潛能，實現自我價值。&lt;/p&gt;
&lt;p&gt;文化傳承與創新:教育不僅是傳承文化的重要途徑，同時也是文化創新的泉源。 透過教育，學生能夠在了解和繼承文化的基礎上，進行創新和突破。&lt;/p&gt;
&lt;p&gt;綜上所述，教育的本質不僅是傳授知識和技能，更重要的是全面培養人的綜合素質，使其成為有知識、有能力、有道德、有責任感的社會成員。 教育應注重個體的全面發展，為其終身學習和持續發展奠定堅實基礎。&lt;/p&gt;</content><category term="w8"></category><category term="網誌編寫"></category></entry><entry><title>wcm2024 課程W6</title><link href="./2024-wcm2024-w6-blog-tutorial.html" rel="alternate"></link><published>2024-03-28T11:00:00+08:00</published><updated>2024-06-18T18:53:19+08:00</updated><author><name>wei</name></author><id>tag:None,2024-03-28:./2024-wcm2024-w6-blog-tutorial.html</id><summary type="html">&lt;p&gt;何透過與Chat GPT對話了解有關git的應用方法 &lt;/p&gt;
</summary><content type="html">&lt;p&gt;何透過與Chat GPT對話了解有關git的應用方法 &lt;/p&gt;


&lt;h1&gt;Git的發展歷史&lt;/h1&gt;
&lt;p&gt;創作人:
Linus Torvalds（林納斯·托瓦茲）是一位電腦科學家和軟體工程師，出生於芬蘭的赫爾辛基，於1969年12月28日出生。
他最著名的貢獻是創建了Linux內核，並成為了Linux開源作業系統的主要開發者之一。
Linus Torvalds於1991年開始編寫Linux內核，當時他還是大學生，Linux最初是作為他的個人專案開始的。
Linus Torvalds同時也是開源運動的積極支持者和倡導者，他認為開源軟體開發模式能夠促進創新、共享知識，並有助於建構更穩健、更安全的軟體。
他在2005年為了管理Linux核心專案而創立了Git。 Git的設計受到了分散式版本控制系統BitKeeper的啟發。
Linus Torvalds以其在作業系統和開源軟體領域的貢獻而聞名於世，他的工作對於推動電腦技術的發展和普及發揮了重要作用。
因其對開源軟件的貢獻和領導地位而成為了科技界的重要人物之一。&lt;/p&gt;
&lt;p&gt;歷史:
Linus Torvalds於1991年開始編寫Linux內核，當時他還是芬蘭赫爾辛基大學的學生。
git問世於西元2005因Linus Torvalds為了管理自己創建的Linux核心專案，而創建了Git版本控制系統，他認為現有的版本控制系統不符合他的需求，因此決定寫一個新的系統。&lt;/p&gt;
&lt;p&gt;發展:
GitHub是一個基於Git的程式碼託管平台，於2008年成立。 GitHub的出現大大推動了Git的普及和發展，成為了全球最大的程式碼託管平台之一。
隨著時間的推移，Git的社群不斷壯大，包括了各種貢獻者、開發者和使用者。
這個龐大的社區為Git的發展和改進做出了巨大貢獻，Git不僅在開源社群中廣泛應用。
也在企業中得到了採用，許多大型公司和組織都在使用Git作為其主要的版本控制系統。&lt;/p&gt;
&lt;p&gt;優點:
易於學習和使用：儘管Git具有強大的功能，但它的命令和操作也相對簡單直觀。
版本追蹤與歷史記錄：Git能夠精確追蹤文件的每一次修改，並保留完整的歷史記錄。
可以輕鬆地查看文件的修改記錄、回滾到之前的版本等。
強大的分支管理：Git的分支管理功能非常強大，開發者可以輕鬆建立、合併和刪除分支，
使得開發團隊可以更靈活地進行。&lt;/p&gt;
&lt;p&gt;開源：
Git是一個開源項目，開發者可以自由地查看、修改和分享Git的原始碼，同時也可得到來自社群的技術支援和貢獻。
速度和效能：Git被設計成高效快速的版本控制系統，能夠處理大型專案和大量數據，且具有優秀的效能表現。&lt;/p&gt;
&lt;h1&gt;Git的其他運用&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://41223153.github.io/wcm2024/content/git%E7%9A%84%E9%81%8B%E7%94%A8.html"&gt;https://41223153.github.io/wcm2024/content/git%E7%9A%84%E9%81%8B%E7%94%A8.html&lt;/a&gt;&lt;/p&gt;</content><category term="w6"></category><category term="網誌編寫"></category></entry><entry><title>wcm2024 課程W5</title><link href="./2024-wcm2024-w5-blog-tutorial.html" rel="alternate"></link><published>2024-03-21T11:00:00+08:00</published><updated>2024-06-18T18:53:19+08:00</updated><author><name>wei</name></author><id>tag:None,2024-03-21:./2024-wcm2024-w5-blog-tutorial.html</id><summary type="html">&lt;p&gt;以影片方式摘要前四周課程內容&lt;/p&gt;
</summary><content type="html">&lt;p&gt;以影片方式摘要前四周課程內容&lt;/p&gt;


&lt;h1&gt;以 iframe 嵌入先前的教學影片, 並摘要各影片內容.&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://mde.tw/wcm2024/blog/wcm-1a-w5.html"&gt;https://mde.tw/wcm2024/blog/wcm-1a-w5.html&lt;/a&gt;&lt;/p&gt;</content><category term="w5"></category><category term="網誌編寫"></category></entry><entry><title>wcm2024 課程W4</title><link href="./2024-wcm2024-w4-blog-tutorial.html" rel="alternate"></link><published>2024-03-14T11:00:00+08:00</published><updated>2024-06-18T18:53:19+08:00</updated><author><name>wei</name></author><id>tag:None,2024-03-14:./2024-wcm2024-w4-blog-tutorial.html</id><summary type="html">&lt;p&gt;介紹git與cmsimde的相關用法。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;介紹git與cmsimde的相關用法。&lt;/p&gt;


&lt;h1&gt;Git常用指令&lt;/h1&gt;
&lt;p&gt;可以參考我的網頁或是分組網頁
&lt;a href="https://41223153.github.io/wcm2024/content/git%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4.html"&gt;https://41223153.github.io/wcm2024/content/git%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mdewcm2024.github.io/1a-ag1/content/GIT%20HELP%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4.html"&gt;https://mdewcm2024.github.io/1a-ag1/content/GIT%20HELP%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4.html&lt;/a&gt;&lt;/p&gt;</content><category term="w4"></category><category term="網誌編寫"></category></entry><entry><title>wcm2024 課程W3</title><link href="./2024-wcm2024-w3-blog-tutorial.html" rel="alternate"></link><published>2024-03-07T11:00:00+08:00</published><updated>2024-06-18T18:53:19+08:00</updated><author><name>wei</name></author><id>tag:None,2024-03-07:./2024-wcm2024-w3-blog-tutorial.html</id><summary type="html">&lt;p&gt;在Github倉儲除了利用Replit來維護網站，還可以導入Github Codespaces來維護個人與分組網站.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;在Github倉儲除了利用Replit來維護網站，還可以導入Github Codespaces來維護個人與分組網站.&lt;/p&gt;


&lt;h1&gt;Codespaces的使用&lt;/h1&gt;
&lt;p&gt;打開codespaces後，點選下方終端機，並依序輸入
chmod u+x init_replit
./init_replit
python3 main.py
便可以開始編輯網頁
網頁預設密碼:admin&lt;/p&gt;
&lt;p&gt;&lt;a href="https://41223153.github.io/wcm2024/content/W3.html"&gt;https://41223153.github.io/wcm2024/content/W3.html&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;常用Git指令&lt;/h1&gt;
&lt;p&gt;可參考&lt;a href="https://41223153.github.io/wcm2024/content/git%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4.html"&gt;https://41223153.github.io/wcm2024/content/git%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4.html&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;利用 Github Classroom 分組&lt;/h1&gt;
&lt;p&gt;四技期中分組作業名稱為 1a, 各組組長在取得作業連結之後, 自行建立各組 Team, 以第一組為例, Team 名稱為 ag1, 之後以每組至多 6 名組員, 透過作業連結加入 ag1 Team, 其餘各組組員則依序建立 ag2, ag3 等 Team 名稱, 讓該組組員可以加入.&lt;/p&gt;</content><category term="w3"></category><category term="網誌編寫"></category></entry><entry><title>wcm2024 課程W2</title><link href="./2024-wcm2024-w2-blog-tutorial.html" rel="alternate"></link><published>2024-02-29T11:00:00+08:00</published><updated>2024-06-18T18:53:19+08:00</updated><author><name>wei</name></author><id>tag:None,2024-02-29:./2024-wcm2024-w2-blog-tutorial.html</id><summary type="html">&lt;p&gt;延續上禮拜的課程，確認是否完成 Github中個人倉儲與網站的建立，並且除了Replit還導入Github Codespaces維護個人與分組網站。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;延續上禮拜的課程，確認是否完成 Github中個人倉儲與網站的建立，並且除了Replit還導入Github Codespaces維護個人與分組網站。&lt;/p&gt;


&lt;h1&gt;利用 Github Classroom 建立分組網站&lt;/h1&gt;
&lt;p&gt;在 mdewcm2024 帳號下，期中分組作業名稱為 1a，若第一組組長建立 Team 名稱為 midag1，則分組倉儲名稱將為 1a-midag1，而五專課程則使用 5j-midjg1，需要如此命名作業與分組倉儲名稱的原因是，在 Github Classroom 同一個 organization 名稱下 (即 wcm2024)，各班作業名稱必須有所區別，而且各分組 Team 名稱也不能相同。&lt;/p&gt;</content><category term="w2"></category><category term="網誌編寫"></category></entry><entry><title>wcm2024 課程W1</title><link href="./2024-wcm2024-w1-blog-tutorial.html" rel="alternate"></link><published>2024-02-22T11:00:00+08:00</published><updated>2024-06-18T18:53:19+08:00</updated><author><name>wei</name></author><id>tag:None,2024-02-22:./2024-wcm2024-w1-blog-tutorial.html</id><summary type="html">&lt;p&gt;加入網際網路課程團隊，建立一個wcm2024倉儲&lt;/p&gt;
</summary><content type="html">&lt;p&gt;加入網際網路課程團隊，建立一個wcm2024倉儲&lt;/p&gt;


&lt;h1&gt;Teams&lt;/h1&gt;
&lt;p&gt;登入學校的Microsoft帳號，開啟Teams加入網際網路課程團隊(代碼:ry8vdyo)&lt;/p&gt;
&lt;h1&gt;Github倉儲&lt;/h1&gt;
&lt;p&gt;大一上有修過計算機程式，延續上學期的課程使用同一個帳號，創建一個wcm2024倉儲，倉儲建立完成後，再接著建立網站，可參考老師的影片。&lt;/p&gt;
&lt;p&gt;倉儲:&lt;a href="https://github.com/41223153/wcm2024"&gt;https://github.com/41223153/wcm2024&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;網站:&lt;a href="https://41223153.github.io/wcm2024/content/index.html"&gt;https://41223153.github.io/wcm2024/content/index.html&lt;/a&gt;&lt;/p&gt;</content><category term="w1"></category><category term="網誌編寫"></category></entry><entry><title>2024 Spring 課程</title><link href="./2024-Spring-w1-blog-tutorial.html" rel="alternate"></link><published>2024-02-18T11:00:00+08:00</published><updated>2024-06-18T18:53:19+08:00</updated><author><name>kmol</name></author><id>tag:None,2024-02-18:./2024-Spring-w1-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;p&gt;使用者可以自行利用 &lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; 倉儲作為 Template, 建立自己的網站內容管理系統.&lt;/p&gt;
&lt;p&gt;引用網站網址連結的方法:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 在文章中多次引用同一個網站連結時, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;https://github.com/mdecycu/cmsimde_site&lt;/a&gt; - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 也可以使用 Markdown 的標準網站連結使用格式.&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# 引用 Python 程式的方法
for i in range(10):
    print(i, "列出字串")
&lt;/pre&gt;

&lt;p&gt;也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼.&lt;/p&gt;
&lt;p&gt;從 1 累加到 100:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100"&gt;1 add to 100&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;將 iterable 與 iterator &lt;a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"&gt;相關說明&lt;/a&gt;, 利用 Brython 與 Ace Editor 整理在這個頁面.&lt;/p&gt;
&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 FileSaver 與 filereader --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/FileSaver.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/filereader.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 ace --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/ace.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/ext-language_tools.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/mode-python3.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/snippets/python.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --&gt;
&lt;script src="./../cmsimde/static/Cango-24v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/gearUtils-09.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/sylvester.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/PrairieDraw.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript"&gt;
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 結束--&gt;&lt;/p&gt;
&lt;!-- editor1 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor1" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run1"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console1"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console1"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd1"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console1"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div1"&gt;&lt;/div&gt;
&lt;!-- editor1 結束 --&gt;
&lt;hr/&gt;&lt;!-- ########################################## --&gt;&lt;p&gt;從 1 累加到 100 part2:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100part2"&gt;1 add to 100&lt;/button&gt;&lt;button id="cango_three_gears"&gt;cango_three_gears&lt;/button&gt;&lt;button id="bsnake"&gt;BSnake&lt;/button&gt;&lt;button id="aitetris"&gt;AI Tetris&lt;/button&gt;&lt;button id="threejsblock"&gt;Rotating Block&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 結束--&gt;&lt;/p&gt;
&lt;!-- editor2 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor2" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename2" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run2"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console2"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console2"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd2"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console2"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div2"&gt;&lt;/div&gt;
&lt;!-- editor2 結束 --&gt;
&lt;hr/&gt;&lt;p&gt;
&lt;script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"&gt;&lt;/script&gt;</content><category term="w1"></category><category term="網誌編寫"></category></entry></feed>